{"version":3,"sources":["App.js","components/images/logo.jpg","components/navBar.jsx","reportWebVitals.js","index.js"],"names":["polyfill","dragImageTranslateOverride","scrollBehaviourDragImageTranslateOverride","window","addEventListener","A4","Letter","Fit","Portrait","Landscape","None","Small","Big","App","props","clearSelection","imgArr","state","images","forEach","img","selected","setState","readfiles","fileList","a","console","log","length","i","type","imgDataUrl","URL","createObjectURL","uuid","uuidv4","push","id","file","loadImage","objUrl","Promise","resolve","reject","Image","onload","onerror","e","src","fetchImage","dataURL","quality","fetch","res","arrayBuffer","raw","mime","headers","get","canvas","document","createElement","ctx","getContext","width","height","drawImage","canvasToBlob","blob","createPdf","busy","PDFDocument","create","pdfDoc","pageSize","getPageSize","compressImages","imageQuality","undefined","jpegOrientation","jpegExif","EXIF","readFromBinaryFile","ex","error","embedJpg","embedPng","page","addPage","x","y","scaleFactor","Math","min","getWidth","pageMargin","getHeight","dim","scale","setRotation","degrees","save","pdfBytes","Blob","link","href","download","click","lastError","lastMime","deletePage","arr","indexPosition","index","splice","handleDrop","droppedId","currentId","droppedIndex","droppedImage","currentIndex","pageOrientation","PageSizes","reverse","getAspectRatio","forceShowOption","fileInput","React","createRef","pageWrapper","border","display","background","position","pageStyle","margin","flex","backgroundSize","backgroundRepeat","backgroundPosition","this","ceil","boxShadow","landing","className","style","padding","class","onClick","current","onDragStart","onDrop","stopPropagation","preventDefault","files","dataTransfer","onDragOver","onDragEnter","listView","flexWrap","justifyContent","map","draggable","effectAllowed","setData","getData","imgArr1","right","top","color","aria-hidden","backgroundImage","pageMarginSection","paddingBottom","fontSize","paddingTop","flexDirection","textAlign","imageQualitySelector","optionStyle","closeBtn","options","actions","borderTop","paddingLeft","paddingRight","pageHeader","ref","onChange","multiple","overflow","accept","toBlob","err","replace","c","r","random","toString","Component","Navbar","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db9f0a70.chunk.js","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\nimport { PageSizes, PDFDocument, degrees } from 'pdf-lib'\r\nimport EXIF from 'exif-js';\r\nimport { polyfill } from \"mobile-drag-drop\";\r\n\r\n// optional import of scroll behaviour\r\nimport { scrollBehaviourDragImageTranslateOverride } from \"mobile-drag-drop/scroll-behaviour\";\r\n\r\n// options are optional ;)\r\npolyfill({\r\n  // use this to make use of the scroll behaviour\r\n  dragImageTranslateOverride: scrollBehaviourDragImageTranslateOverride\r\n});\r\n\r\nwindow.addEventListener('touchmove', function () { });\r\n\r\nconst A4 = \"A4\", Letter = \"US Letter\", Fit = \"Same as Image\", Portrait = \"Portrait\", Landscape = \"Landscape\", None = \"0\", Small = \"20\", Big = \"50\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      images: [],\r\n      pageOrientation: Portrait,\r\n      pageSize: A4,\r\n      pageMargin: None,\r\n      lastError: undefined,\r\n      lastMime: undefined,\r\n      forceShowOption: false,\r\n      compressImages: false,\r\n      imageQuality: 8,\r\n      busy: false\r\n    };\r\n    this.fileInput = React.createRef();\r\n  }\r\n  render() {\r\n    let pageWrapper = {\r\n      height: \"192px\",\r\n      width: \"192px\",\r\n      border: \"none\",\r\n      display: \"flex\",\r\n      background: \"white\",\r\n      position: \"relative\"\r\n    };\r\n\r\n    let pageStyle = {\r\n      margin: '0px',\r\n      flex: \"1\",\r\n      backgroundSize: \"contain\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundPosition: \"center\"\r\n    };\r\n\r\n    if (this.state.pageMargin === Small) {\r\n      pageStyle.margin = \"5px\";\r\n    } else if (this.state.pageMargin === Big) {\r\n      pageStyle.margin = \"10px\";\r\n    }\r\n\r\n    if (this.state.pageSize !== Fit) {\r\n      pageWrapper.width = Math.ceil(192 * this.getAspectRatio()) + 'px';\r\n      pageWrapper.boxShadow = \"3px 3px 3px #329e008b\";\r\n    }\r\n\r\n    const landing = (<div className=\"landing-page\">\r\n      <div style={{ padding: \"40px\" }}>\r\n        Convert JPEG or PNG images to PDF without uploading your sensitve data anywhere.\r\n      <br />\r\n      Files are processed entirely on your device and does not get uploaded to any server.\r\n      </div>\r\n      <div class=\"drop-box\">\r\n        <div>\r\n          <button onClick={() => this.fileInput.current.click()} className=\"big-btn\">Select Images</button>\r\n        </div>\r\n      <div className=\"dropzone\"\r\n        onDragStart={(e) => {\r\n        }}\r\n        onDrop={(e) => {\r\n          if (e.stopPropagation) {\r\n            e.stopPropagation(); // stops the browser from redirecting.\r\n          }\r\n          if (e.preventDefault) {\r\n            e.preventDefault(); // stops the browser from redirecting.\r\n          }\r\n          let files = e.dataTransfer.files;\r\n          this.readfiles(files);\r\n        }}\r\n        onDragOver={(e) => {\r\n          if (e.preventDefault) {\r\n            e.preventDefault(); // stops the browser from redirecting.\r\n          }\r\n        }}\r\n        onDragEnter={(e) => { e.preventDefault(); }}>or drop images here</div>        \r\n      </div>\r\n    </div>);\r\n\r\n    const listView = (<div class=\"after\" style={{ display: 'flex', flexWrap: 'wrap', flex: \"1\", justifyContent: \"center\" }} >\r\n      {this.state.images.map((img, index) => (\r\n        <div\r\n          style={{ padding: \"5px\" }}\r\n          key={img.id + \"\"}\r\n          draggable={true}\r\n          onDragStart={(e) => {\r\n            e.dataTransfer.effectAllowed = 'move';\r\n            e.dataTransfer.setData('text/plain', img.id);\r\n            console.log(\"Drag start \" + index);\r\n          }}\r\n          onDrop={(e) => {\r\n            if (e.stopPropagation) {\r\n              e.stopPropagation(); // stops the browser from redirecting.\r\n            }\r\n            let droppedId = e.dataTransfer.getData(\"text/plain\");\r\n            console.log(\"droppedId: \" + droppedId);\r\n            this.handleDrop(droppedId, img.id);\r\n          }}\r\n          onDragOver={(e) => {\r\n            if (e.preventDefault) {\r\n              e.preventDefault(); // stops the browser from redirecting.\r\n            }\r\n          }}\r\n          onDragEnter={(e) => { e.preventDefault(); }}\r\n        >\r\n          <div style={{ ...pageWrapper }}\r\n            onClick={\r\n              (e) => {\r\n                let imgArr1 = [...this.state.images];\r\n                for (let x = 0; x < imgArr1.length; x++) {\r\n                  imgArr1[x] = { ...imgArr1[x], selected: imgArr1[x].id === img.id };\r\n                }\r\n                this.setState({ images: [...imgArr1] });\r\n                e.stopPropagation();\r\n              }\r\n            }\r\n          >\r\n            <div style={{\r\n              display: img.selected ? \"block\" : \"none\", position: \"absolute\",\r\n              right: \"0px\", top: \"0px\", padding: \"5px\", color: \"rgb(180,180,180)\"\r\n            }} onClick={(e) => { e.stopPropagation(); this.deletePage(img.id); }} ><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></div>\r\n            <div style={{ ...pageStyle, backgroundImage: \"url('\" + img.imgDataUrl + \"')\" }}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>);\r\n\r\n    const pageMarginSection = (<div>\r\n      <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Page margin</div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{\r\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n          justifyContent: \"center\", textAlign: \"center\",\r\n          background: (this.state.pageMargin == None ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n          color: (this.state.pageMargin == None ? \"white\" : \"black\"), padding: \"5px\"\r\n        }} onClick={() => this.setState({ pageMargin: None })}>None</div>\r\n        <div style={{\r\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n          justifyContent: \"center\", textAlign: \"center\",\r\n          background: (this.state.pageMargin == Small ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n          color: (this.state.pageMargin == Small ? \"white\" : \"black\"), padding: \"5px\"\r\n        }} onClick={() => this.setState({ pageMargin: Small })}>Small</div>\r\n        <div style={{\r\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n          justifyContent: \"center\", textAlign: \"center\",\r\n          background: (this.state.pageMargin == Big ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n          color: (this.state.pageMargin == Big ? \"white\" : \"black\"), padding: \"5px\"\r\n        }} onClick={() => this.setState({ pageMargin: Big })}>Big</div>\r\n      </div>\r\n    </div>);\r\n\r\n    const imageQualitySelector = (<div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>Image quality</div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ padding: \"5px\" }}>\r\n          <button onClick={() => {\r\n            if (this.state.imageQuality < 10) {\r\n              this.setState({\r\n                imageQuality: +this.state.imageQuality + 1\r\n              });\r\n            }\r\n          }}>+</button>\r\n        </div>\r\n        <div style={{ padding: \"5px\" }}>\r\n          <div>{this.state.imageQuality / 10}</div>\r\n        </div>\r\n        <div style={{ padding: \"5px\" }} >\r\n          <button onClick={() => {\r\n            if (this.state.imageQuality > 1) {\r\n              this.setState({\r\n                imageQuality: +this.state.imageQuality - 1\r\n              });\r\n            }\r\n          }}>-</button>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n\r\n    const optionStyle = {}\r\n    if (this.state.forceShowOption) {\r\n      optionStyle.display = \"block\"\r\n    }\r\n\r\n    const closeBtn = this.state.forceShowOption ? <span onClick={() => { this.setState({ forceShowOption: false }) }}>X</span> : <span></span>;\r\n\r\n    const options = (\r\n      <div className=\"options\" style={optionStyle}>\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"20px\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <span>Options</span>\r\n          {closeBtn}\r\n        </div>\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"10px\" }}>Page orientation</div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageOrientation == Portrait ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageOrientation == Portrait ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ pageOrientation: Portrait })}>Portrait</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageOrientation == Landscape ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageOrientation == Landscape ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ pageOrientation: Landscape })}>Landscape</div>\r\n        </div>\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Page size</div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageSize == A4 ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageSize == A4 ? \"white\" : \"black\"), padding: \"5px\"\r\n          }} onClick={() => this.setState({ pageSize: A4 })}>A4</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageSize == Letter ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageSize == Letter ? \"white\" : \"black\"), padding: \"5px\"\r\n          }} onClick={() => this.setState({ pageSize: Letter })}>US Letter</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageSize == Fit ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageSize == Fit ? \"white\" : \"black\"), padding: \"5px\"\r\n          }} onClick={() => this.setState({ pageSize: Fit })}>Same as Image</div>\r\n        </div>\r\n        {this.state.pageSize !== Fit ? pageMarginSection : (<div></div>)}\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Compression</div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.compressImages ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.compressImages ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ compressImages: true })}>Compress Images</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (!this.state.compressImages ? \"#339E00\" : \"rgb(240,240,240)\"),\r\n            color: (!this.state.compressImages ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ compressImages: false })}>Don't Compress</div>\r\n        </div>\r\n        {this.state.compressImages ? imageQualitySelector : (<div></div>)}\r\n      </div>\r\n    );\r\n    const actions = (<div class=\"nothing\" style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"10px\", borderTop: \"1px solid rgb(200,200,200)\" }}>\r\n      <div style={{ display: \"flex\" }} >\r\n        <div style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\r\n          <button onClick={() => {\r\n            this.setState({\r\n              forceShowOption: true\r\n            });\r\n          }} className=\"option-btn button\">PDF Options</button>\r\n        </div>\r\n        <button onClick={() => this.fileInput.current.click()} className=\"button\">Add page</button>\r\n      </div>\r\n      <button onClick={this.createPdf} className=\"button\">Generate PDF</button>\r\n    </div>);\r\n\r\n    const pageHeader = (<div className=\"page-header\">\r\n      <span>Convert your</span>\r\n      <h1>files easily</h1>\r\n    </div>);\r\n\r\n    if (this.state.images.length < 1) {\r\n      return <div>\r\n        {pageHeader}\r\n        <input type=\"file\" ref={this.fileInput} onChange={() => this.readfiles(this.fileInput.current.files)} multiple style={{ display: \"none\" }}></input>\r\n        {landing}\r\n      </div>\r\n    }\r\n\r\n    const busy = {};\r\n    if (this.state.busy) {\r\n      busy.display = \"flex\";\r\n    }\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", height: \"100%\", overflow: \"hidden\", flex: \"1\" }}>\r\n        {pageHeader}\r\n        <div style={{ display: \"flex\", overflow: \"hidden\", flex: \"1\" }}>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", flex: \"1\", overflow: \"auto\", background: \"rgb(240,240,240)\" }} onClick={this.clearSelection}>\r\n            {listView}\r\n            <div style={{ flex: \"1\" }}></div>\r\n          </div>\r\n          {options}\r\n        </div>\r\n        {actions}\r\n        <input type=\"file\" accept={\"image/*\"} ref={this.fileInput} onChange={() => this.readfiles(this.fileInput.current.files)} multiple style={{ display: \"none\" }} />\r\n        <div className=\"busy\" style={busy}>Generating PDF, Please wait...</div>\r\n      </div>\r\n\r\n    );\r\n\r\n    // return (\r\n    //   <div>\r\n    //     <div>This app is not styled yet</div>\r\n    //     <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n    //       {this.state.images.map((img, index) => (\r\n    //         <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n    //           <img src={img.imgDataUrl} alt=\"\" style={{ width: \"96px\", height: \"128px\" }}></img>\r\n    //           <div>{\"Page \" + (index + 1)}</div>\r\n    //         </div>\r\n    //       ))}\r\n    //     </div>\r\n    //     <div>\r\n    //       <input type=\"file\" ref={this.fileInput} onChange={this.readfiles} multiple></input>\r\n    //       <button onClick={() => { this.setState({ images: [] }) }}>Clear</button>\r\n    //       <button onClick={this.createPdf}>Generate PDF</button>\r\n    //     </div>\r\n    //     {this.state.lastError ?\r\n    //       <div>\r\n    //         <div>{this.state.lastError}</div>\r\n    //         <div>{this.state.lastMime}</div>\r\n    //       </div> : <div>{this.state.lastMime}</div>}\r\n    //     <div>{this.state.lastMime}</div>\r\n    //   </div>);\r\n  }\r\n\r\n  //https://labs.madisoft.it/javascript-image-compression-and-resizing/\r\n  /* resizeImage = async (file, width, height) => {\r\n    const blobURL = window.URL.createObjectURL(file);\r\n    const img = new Image();\r\n    img.src = blobURL;\r\n    img.onload = function (ev) {\r\n      window.URL.revokeObjectURL(blobURL); // release memory\r\n      // Use the img\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n    };\r\n\r\n  } */\r\n\r\n  clearSelection = () => {\r\n    let imgArr = [...this.state.images];\r\n    imgArr.forEach(img => {\r\n      img.selected = false;\r\n    });\r\n    this.setState({\r\n      images: imgArr\r\n    });\r\n  }\r\n\r\n  readfiles = async (fileList) => {\r\n    console.log(fileList.length);\r\n    let imgArr = [];\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      console.log(\"Type: \" + fileList[i].type);\r\n      if (!(fileList[i].type === \"image/png\" || fileList[i].type === \"image/x-png\" || fileList[i].type === \"image/jpeg\")) {\r\n        continue;\r\n      }\r\n      const imgDataUrl = window.URL.createObjectURL(fileList[i]);\r\n      //let img = await this.loadImage(imgDataUrl);\r\n      let uuid = this.uuidv4();\r\n      console.log(\"uuid: \" + uuid);\r\n      imgArr.push({ id: uuid, imgDataUrl, file: fileList[i], /* width: img.width, height: img.height */selected: false });\r\n    }\r\n    this.setState((state) => ({\r\n      images: [...state.images, ...imgArr]\r\n    }));\r\n  }\r\n\r\n  loadImage = (objUrl) => {\r\n    return new Promise((resolve, reject) => {\r\n      let img = new Image();\r\n      img.onload = () => {\r\n        resolve(img);\r\n      };\r\n      img.onerror = (e) => {\r\n        reject(e);\r\n      };\r\n      img.src = objUrl;\r\n    });\r\n  }\r\n\r\n  readExif(blob) {\r\n    EXIF.readFromBinaryFile(blob)\r\n  }\r\n\r\n  canvasToBlob(canvas, quality) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        canvas.toBlob(resolve, \"image/jpeg\", quality);\r\n      }\r\n      catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  // scaleImage = async (pageWidth, pageHeight, pageMargin, dataURL) => {\r\n  //   let img = await this.loadImage(dataURL);\r\n\r\n  //   let scaleFactor = Math.min((pageWidth - pageMargin) / img.width, (pageHeight - pageMargin) / img.height);\r\n  //   let w = img.width * scaleFactor;\r\n  //   let h = img.height * scaleFactor;\r\n\r\n  //   let canvas = document.createElement('canvas');\r\n  //   let ctx = canvas.getContext('2d');\r\n  //   canvas.width = w;\r\n  //   canvas.height = h;\r\n  //   ctx.drawImage(img, 0, 0, w, h);\r\n  //   let blob = await this.canvasToBlob(canvas);\r\n  //   console.log(blob);\r\n  //   return await blob.arrayBuffer();\r\n  // }\r\n\r\n  fetchImage = async (dataURL, quality) => {\r\n    if (!quality) {\r\n      let res = await fetch(dataURL);\r\n      let raw = await res.arrayBuffer();\r\n      return {\r\n        arrayBuffer: raw,\r\n        mime: res.headers.get('content-type')\r\n      }\r\n    }\r\n    else {\r\n      let img = await this.loadImage(dataURL);\r\n      let canvas = document.createElement('canvas');\r\n      let ctx = canvas.getContext('2d');\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.drawImage(img, 0, 0, img.width, img.height);\r\n      let blob = await this.canvasToBlob(canvas, quality);\r\n      let raw = await blob.arrayBuffer();\r\n      return {\r\n        arrayBuffer: raw,\r\n        mime: \"image/jpeg\"\r\n      };\r\n    }\r\n  }\r\n\r\n  createPdf = async () => {\r\n    let mime = \"\";\r\n    try {\r\n      this.setState({ busy: true });\r\n      const pdfDoc = await PDFDocument.create();\r\n      for (let i = 0; i < this.state.images.length; i++) {\r\n\r\n        let pageSize = this.getPageSize();\r\n\r\n        // if (this.state.pageSize !== Fit) {\r\n        //   const page = pdfDoc.addPage(pageSize);\r\n        //   const dim = await pdfDoc.embedPng(await this.scaleImage(page.getWidth(), page.getHeight(), this.state.pageMargin, this.state.images[i].imgDataUrl));\r\n        //   page.drawImage(dim, {\r\n        //     x: page.getWidth() / 2 - dim.width / 2,\r\n        //     y: page.getHeight() / 2 - dim.height / 2,\r\n        //     width: dim.width,\r\n        //     height: dim.height,\r\n        //   });\r\n\r\n        //   continue;\r\n        // }\r\n\r\n        // let loadedImage=await loadImage(this.state.images[i].imgDataUrl,{meta:true});\r\n        // console.log(\"loaded image \"+loadedImage);\r\n        // console.log(loadedImage);\r\n\r\n        let res = await this.fetchImage(this.state.images[i].imgDataUrl, this.state.compressImages ? this.state.imageQuality / 10 : undefined);\r\n        let raw = await res.arrayBuffer;\r\n\r\n        mime = res.mime;\r\n        console.log(mime);\r\n\r\n        let jpegOrientation = 1;\r\n\r\n        if (mime === 'image/jpeg') {\r\n          try {\r\n            let jpegExif = EXIF.readFromBinaryFile(raw);\r\n            if (jpegExif[\"Orientation\"]) {\r\n              jpegOrientation = jpegExif[\"Orientation\"];\r\n              console.log(\"jpegOrientation: \" + jpegOrientation);\r\n            }\r\n          }\r\n          catch (ex) { console.error(ex); }\r\n        }\r\n        //console.log(raw);\r\n        const img = await (mime === 'image/jpeg' ? pdfDoc.embedJpg(raw) : pdfDoc.embedPng(raw));\r\n\r\n        console.log(\"width: \" + img.width + \" height: \" + img.height);\r\n\r\n        if (this.state.pageSize === Fit) {\r\n          pageSize = [img.width, img.height];\r\n        } else {\r\n          switch (jpegOrientation) {\r\n            case 6:\r\n            case 8:\r\n              pageSize = [pageSize[1], pageSize[0]];\r\n              break;\r\n          }\r\n        }\r\n        const page = pdfDoc.addPage(pageSize);\r\n        if (this.state.pageSize === Fit) {\r\n          page.drawImage(img, {\r\n            x: 0,\r\n            y: 0,\r\n            width: img.width,\r\n            height: img.height,\r\n          });\r\n        } else {\r\n          //page.setSize(pageSize[0], pageSize[1]);\r\n          let scaleFactor = Math.min((page.getWidth() - this.state.pageMargin) / img.width, (page.getHeight() - this.state.pageMargin) / img.height);\r\n          let w = img.width * scaleFactor;\r\n          let h = img.height * scaleFactor;\r\n\r\n          //page.setSize(img.width,img.height);\r\n          console.log(img.width + \" \" + img.height);\r\n          console.log(page.getWidth() + \" \" + page.getHeight());\r\n\r\n          let dim = img.scale(scaleFactor);\r\n\r\n          page.drawImage(img, {\r\n            x: page.getWidth() / 2 - dim.width / 2,\r\n            y: page.getHeight() / 2 - dim.height / 2,\r\n            width: dim.width,\r\n            height: dim.height,\r\n          });\r\n        }\r\n\r\n        switch (jpegOrientation) {\r\n          case 6:\r\n            page.setRotation(degrees(90));\r\n            break;\r\n          case 3:\r\n            page.setRotation(degrees(180));\r\n            break;\r\n          case 8:\r\n            page.setRotation(degrees(270));\r\n            break;\r\n        }\r\n      }\r\n      const pdfBytes = await pdfDoc.save();\r\n      let blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n      // let url = window.URL.createObjectURL(blob);\r\n      // window.open(url);\r\n      var link = document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob);\r\n      var fileName = \"file.pdf\";\r\n      link.download = fileName;\r\n      link.click();\r\n      this.setState({ busy: false });\r\n    }\r\n    catch (err) {\r\n      console.error(err);\r\n      this.setState({ lastError: err, lastMime: mime, busy: false });\r\n    }\r\n  }\r\n\r\n  deletePage = id => {\r\n    console.log(\"To delete: \" + id);\r\n    let arr = [...this.state.images];\r\n    let indexPosition = -1;\r\n    arr.forEach((img, index) => {\r\n      if (img.id === id) {\r\n        indexPosition = index;\r\n      }\r\n    });\r\n    arr.splice(indexPosition, 1);\r\n    this.setState({\r\n      images: arr\r\n    });\r\n  }\r\n\r\n  handleDrop = (droppedId, currentId) => {\r\n    console.log(\"droppedId: \" + droppedId + \" currentId: \" + currentId);\r\n    let droppedIndex = -1;\r\n    let arr = [...this.state.images];\r\n    arr.forEach((img, index) => {\r\n      if (img.id === droppedId) {\r\n        droppedIndex = index;\r\n      }\r\n    });\r\n    let droppedImage = arr.splice(droppedIndex, 1)[0];\r\n    let currentIndex = -1;\r\n    arr.forEach((img, index) => {\r\n      if (img.id === currentId) {\r\n        currentIndex = index;\r\n      }\r\n    });\r\n    arr.splice(currentIndex, 0, droppedImage);\r\n    console.log(arr);\r\n\r\n    this.setState({\r\n      images: arr\r\n    });\r\n  }\r\n\r\n  getPageSize = () => {\r\n    switch (this.state.pageSize) {\r\n      case A4:\r\n        if (this.state.pageOrientation === Portrait) {\r\n          return PageSizes.A4;\r\n        }\r\n        else {\r\n          let pageSize = [...PageSizes.A4];\r\n          pageSize.reverse();\r\n          return pageSize;\r\n        }\r\n      case Letter:\r\n        if (this.state.pageOrientation === Portrait) {\r\n          return PageSizes.Letter;\r\n        }\r\n        else {\r\n          let pageSize = [...PageSizes.Letter];\r\n          pageSize.reverse();\r\n          return pageSize;\r\n        }\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  getAspectRatio = () => {\r\n    let pageSize = this.getPageSize();\r\n    return pageSize[0] / pageSize[1];\r\n  }\r\n\r\n  // getPreviewImageSize = (pageWidth, pageHeight, imageWidth, imageHeight) => {\r\n  //   let pageSize = this.getPageSize();\r\n  //   let margin = this.state.pageMargin * pageHeight / pageSize[1];\r\n  //   let scaleFactor = Math.min((pageWidth - margin) / img.width, (pageHeight - margin) / img.height);\r\n  //   let w = imageWidth * scaleFactor;\r\n  //   let h = imageHeight * scaleFactor;\r\n  //   return [w, h];\r\n  // }\r\n\r\n  // getPreviewPageSize = () => {\r\n  //   return {\r\n  //     height: 192,\r\n  //     width: 192 * this.getAspectRatio()\r\n  //   };\r\n  // }\r\n\r\n  // getMaxImageSize=()=>{\r\n  //   let maxWidth = -1;\r\n  //   let maxHeight = -1;\r\n  //   this.state.images.forEach(image => {\r\n  //     if (image.width > maxWidth) maxWidth = image.width;\r\n  //     if (image.height > maxWidth) maxHeight = image.height;\r\n  //   });\r\n  //   return {\r\n  //     width: maxWidth,\r\n  //     height: maxHeight\r\n  //   };\r\n  // }\r\n\r\n  /* createPdf = async () => {\r\n    const pdfDoc = await PDFDocument.create();\r\n    this.createPage(pdfDoc, 1);\r\n  }\r\n\r\n  createPage = (pdfDoc, index) => {\r\n    this.embedImage(pdfDoc, index).then(() => {\r\n      if (index > this.state.images.length) {\r\n        pdfDoc.save().then((blob) => {\r\n          var link = document.createElement('a');\r\n          link.href = window.URL.createObjectURL(blob);\r\n          var fileName = \"file.pdf\";\r\n          link.download = fileName;\r\n          link.click();\r\n        });\r\n      }\r\n      this.createPage(pdfDoc, index + 1);\r\n    });\r\n  }\r\n\r\n  embedImage = async (pdfDoc, index) => {\r\n    if (index > this.state.images.length) return;\r\n    let raw = await (await fetch(this.state.images[index - 1])).blob();\r\n    const img = await pdfDoc.embedJpg(raw);\r\n    const page = pdfDoc.addPage();\r\n    page.drawImage(img, {\r\n      x: 0,\r\n      y: 0,\r\n      width: page.getWidth(),\r\n      height: page.getHeight(),\r\n    });\r\n  } */\r\n\r\n  uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/logo.59329567.jpg\";","import React, { Component } from 'react';\r\nimport '../components/navBar.css';\r\nimport logo from '../components/images/logo.jpg';\r\nclass Navbar extends Component {\r\n    render() { \r\n        return (\r\n            <div class=\"nav-bar\">\r\n                <div class=\"logo\">\r\n                    <img src={logo} alt=\"\" />\r\n                    <h1>DEV_DEEPAN</h1>\r\n                </div>\r\n                <div class=\"nav-item\">\r\n                    <a href=\"\">Home</a>\r\n                    <a href=\"\">Share</a>\r\n                    <a href=\"\">FAQ</a>\r\n                </div>\r\n                <div class=\"contact\">\r\n                    <button>Contact</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Navbar;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Navbar from './components/navBar';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Navbar />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}