{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deepanganth\\\\Desktop\\\\img2pdf\\\\pdf-app\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport { PageSizes, PDFDocument, degrees } from 'pdf-lib';\nimport EXIF from 'exif-js';\nimport { polyfill } from \"mobile-drag-drop\"; // optional import of scroll behaviour\n\nimport { scrollBehaviourDragImageTranslateOverride } from \"mobile-drag-drop/scroll-behaviour\"; // options are optional ;)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npolyfill({\n  // use this to make use of the scroll behaviour\n  dragImageTranslateOverride: scrollBehaviourDragImageTranslateOverride\n});\nwindow.addEventListener('touchmove', function () {});\nconst A4 = \"A4\",\n      Letter = \"US Letter\",\n      Fit = \"Same as Image\",\n      Portrait = \"Portrait\",\n      Landscape = \"Landscape\",\n      None = \"0\",\n      Small = \"20\",\n      Big = \"50\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearSelection = () => {\n      let imgArr = [...this.state.images];\n      imgArr.forEach(img => {\n        img.selected = false;\n      });\n      this.setState({\n        images: imgArr\n      });\n    };\n\n    this.readfiles = async fileList => {\n      console.log(fileList.length);\n      let imgArr = [];\n\n      for (let i = 0; i < fileList.length; i++) {\n        console.log(\"Type: \" + fileList[i].type);\n\n        if (!(fileList[i].type === \"image/png\" || fileList[i].type === \"image/x-png\" || fileList[i].type === \"image/jpeg\")) {\n          continue;\n        }\n\n        const imgDataUrl = window.URL.createObjectURL(fileList[i]); //let img = await this.loadImage(imgDataUrl);\n\n        let uuid = this.uuidv4();\n        console.log(\"uuid: \" + uuid);\n        imgArr.push({\n          id: uuid,\n          imgDataUrl,\n          file: fileList[i],\n\n          /* width: img.width, height: img.height */\n          selected: false\n        });\n      }\n\n      this.setState(state => ({\n        images: [...state.images, ...imgArr]\n      }));\n    };\n\n    this.loadImage = objUrl => {\n      return new Promise((resolve, reject) => {\n        let img = new Image();\n\n        img.onload = () => {\n          resolve(img);\n        };\n\n        img.onerror = e => {\n          reject(e);\n        };\n\n        img.src = objUrl;\n      });\n    };\n\n    this.fetchImage = async (dataURL, quality) => {\n      if (!quality) {\n        let res = await fetch(dataURL);\n        let raw = await res.arrayBuffer();\n        return {\n          arrayBuffer: raw,\n          mime: res.headers.get('content-type')\n        };\n      } else {\n        let img = await this.loadImage(dataURL);\n        let canvas = document.createElement('canvas');\n        let ctx = canvas.getContext('2d');\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0, img.width, img.height);\n        let blob = await this.canvasToBlob(canvas, quality);\n        let raw = await blob.arrayBuffer();\n        return {\n          arrayBuffer: raw,\n          mime: \"image/jpeg\"\n        };\n      }\n    };\n\n    this.createPdf = async () => {\n      let mime = \"\";\n\n      try {\n        this.setState({\n          busy: true\n        });\n        const pdfDoc = await PDFDocument.create();\n\n        for (let i = 0; i < this.state.images.length; i++) {\n          let pageSize = this.getPageSize(); // if (this.state.pageSize !== Fit) {\n          //   const page = pdfDoc.addPage(pageSize);\n          //   const dim = await pdfDoc.embedPng(await this.scaleImage(page.getWidth(), page.getHeight(), this.state.pageMargin, this.state.images[i].imgDataUrl));\n          //   page.drawImage(dim, {\n          //     x: page.getWidth() / 2 - dim.width / 2,\n          //     y: page.getHeight() / 2 - dim.height / 2,\n          //     width: dim.width,\n          //     height: dim.height,\n          //   });\n          //   continue;\n          // }\n          // let loadedImage=await loadImage(this.state.images[i].imgDataUrl,{meta:true});\n          // console.log(\"loaded image \"+loadedImage);\n          // console.log(loadedImage);\n\n          let res = await this.fetchImage(this.state.images[i].imgDataUrl, this.state.compressImages ? this.state.imageQuality / 10 : undefined);\n          let raw = await res.arrayBuffer;\n          mime = res.mime;\n          console.log(mime);\n          let jpegOrientation = 1;\n\n          if (mime === 'image/jpeg') {\n            try {\n              let jpegExif = EXIF.readFromBinaryFile(raw);\n\n              if (jpegExif[\"Orientation\"]) {\n                jpegOrientation = jpegExif[\"Orientation\"];\n                console.log(\"jpegOrientation: \" + jpegOrientation);\n              }\n            } catch (ex) {\n              console.error(ex);\n            }\n          } //console.log(raw);\n\n\n          const img = await (mime === 'image/jpeg' ? pdfDoc.embedJpg(raw) : pdfDoc.embedPng(raw));\n          console.log(\"width: \" + img.width + \" height: \" + img.height);\n\n          if (this.state.pageSize === Fit) {\n            pageSize = [img.width, img.height];\n          } else {\n            switch (jpegOrientation) {\n              case 6:\n              case 8:\n                pageSize = [pageSize[1], pageSize[0]];\n                break;\n            }\n          }\n\n          const page = pdfDoc.addPage(pageSize);\n\n          if (this.state.pageSize === Fit) {\n            page.drawImage(img, {\n              x: 0,\n              y: 0,\n              width: img.width,\n              height: img.height\n            });\n          } else {\n            //page.setSize(pageSize[0], pageSize[1]);\n            let scaleFactor = Math.min((page.getWidth() - this.state.pageMargin) / img.width, (page.getHeight() - this.state.pageMargin) / img.height);\n            let w = img.width * scaleFactor;\n            let h = img.height * scaleFactor; //page.setSize(img.width,img.height);\n\n            console.log(img.width + \" \" + img.height);\n            console.log(page.getWidth() + \" \" + page.getHeight());\n            let dim = img.scale(scaleFactor);\n            page.drawImage(img, {\n              x: page.getWidth() / 2 - dim.width / 2,\n              y: page.getHeight() / 2 - dim.height / 2,\n              width: dim.width,\n              height: dim.height\n            });\n          }\n\n          switch (jpegOrientation) {\n            case 6:\n              page.setRotation(degrees(90));\n              break;\n\n            case 3:\n              page.setRotation(degrees(180));\n              break;\n\n            case 8:\n              page.setRotation(degrees(270));\n              break;\n          }\n        }\n\n        const pdfBytes = await pdfDoc.save();\n        let blob = new Blob([pdfBytes], {\n          type: \"application/pdf\"\n        }); // let url = window.URL.createObjectURL(blob);\n        // window.open(url);\n\n        var link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        var fileName = \"file.pdf\";\n        link.download = fileName;\n        link.click();\n        this.setState({\n          busy: false\n        });\n      } catch (err) {\n        console.error(err);\n        this.setState({\n          lastError: err,\n          lastMime: mime,\n          busy: false\n        });\n      }\n    };\n\n    this.deletePage = id => {\n      console.log(\"To delete: \" + id);\n      let arr = [...this.state.images];\n      let indexPosition = -1;\n      arr.forEach((img, index) => {\n        if (img.id === id) {\n          indexPosition = index;\n        }\n      });\n      arr.splice(indexPosition, 1);\n      this.setState({\n        images: arr\n      });\n    };\n\n    this.handleDrop = (droppedId, currentId) => {\n      console.log(\"droppedId: \" + droppedId + \" currentId: \" + currentId);\n      let droppedIndex = -1;\n      let arr = [...this.state.images];\n      arr.forEach((img, index) => {\n        if (img.id === droppedId) {\n          droppedIndex = index;\n        }\n      });\n      let droppedImage = arr.splice(droppedIndex, 1)[0];\n      let currentIndex = -1;\n      arr.forEach((img, index) => {\n        if (img.id === currentId) {\n          currentIndex = index;\n        }\n      });\n      arr.splice(currentIndex, 0, droppedImage);\n      console.log(arr);\n      this.setState({\n        images: arr\n      });\n    };\n\n    this.getPageSize = () => {\n      switch (this.state.pageSize) {\n        case A4:\n          if (this.state.pageOrientation === Portrait) {\n            return PageSizes.A4;\n          } else {\n            let pageSize = [...PageSizes.A4];\n            pageSize.reverse();\n            return pageSize;\n          }\n\n        case Letter:\n          if (this.state.pageOrientation === Portrait) {\n            return PageSizes.Letter;\n          } else {\n            let pageSize = [...PageSizes.Letter];\n            pageSize.reverse();\n            return pageSize;\n          }\n\n        default:\n          return undefined;\n      }\n    };\n\n    this.getAspectRatio = () => {\n      let pageSize = this.getPageSize();\n      return pageSize[0] / pageSize[1];\n    };\n\n    this.state = {\n      images: [],\n      pageOrientation: Portrait,\n      pageSize: A4,\n      pageMargin: None,\n      lastError: undefined,\n      lastMime: undefined,\n      forceShowOption: false,\n      compressImages: false,\n      imageQuality: 8,\n      busy: false\n    };\n    this.fileInput = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    let pageWrapper = {\n      height: \"192px\",\n      width: \"192px\",\n      border: \"none\",\n      display: \"flex\",\n      background: \"white\",\n      position: \"relative\"\n    };\n    let pageStyle = {\n      margin: '0px',\n      flex: \"1\",\n      backgroundSize: \"contain\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\"\n    };\n\n    if (this.state.pageMargin === Small) {\n      pageStyle.margin = \"5px\";\n    } else if (this.state.pageMargin === Big) {\n      pageStyle.margin = \"10px\";\n    }\n\n    if (this.state.pageSize !== Fit) {\n      pageWrapper.width = Math.ceil(192 * this.getAspectRatio()) + 'px';\n      pageWrapper.boxShadow = \"5px 5px 5px rgb(200,200,200)\";\n    }\n\n    const landing = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"landing-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"40px\"\n        },\n        children: [\"Convert JPEG or PNG images to PDF without uploading your sensitve data anywhere.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), \"Files are processed entirely on your device and does not get uploaded to any server.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"drop-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.fileInput.current.click(),\n            className: \"big-btn\",\n            children: \"Select Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropzone\",\n          onDragStart: e => {},\n          onDrop: e => {\n            if (e.stopPropagation) {\n              e.stopPropagation(); // stops the browser from redirecting.\n            }\n\n            if (e.preventDefault) {\n              e.preventDefault(); // stops the browser from redirecting.\n            }\n\n            let files = e.dataTransfer.files;\n            this.readfiles(files);\n          },\n          onDragOver: e => {\n            if (e.preventDefault) {\n              e.preventDefault(); // stops the browser from redirecting.\n            }\n          },\n          onDragEnter: e => {\n            e.preventDefault();\n          },\n          children: \"or drop images here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this);\n\n    const listView = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"after\",\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flex: \"1\",\n        justifyContent: \"center\"\n      },\n      children: this.state.images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"shadow\",\n        style: {\n          padding: \"5px\"\n        },\n        draggable: true,\n        onDragStart: e => {\n          e.dataTransfer.effectAllowed = 'move';\n          e.dataTransfer.setData('text/plain', img.id);\n          console.log(\"Drag start \" + index);\n        },\n        onDrop: e => {\n          if (e.stopPropagation) {\n            e.stopPropagation(); // stops the browser from redirecting.\n          }\n\n          let droppedId = e.dataTransfer.getData(\"text/plain\");\n          console.log(\"droppedId: \" + droppedId);\n          this.handleDrop(droppedId, img.id);\n        },\n        onDragOver: e => {\n          if (e.preventDefault) {\n            e.preventDefault(); // stops the browser from redirecting.\n          }\n        },\n        onDragEnter: e => {\n          e.preventDefault();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: { ...pageWrapper\n          },\n          onClick: e => {\n            let imgArr1 = [...this.state.images];\n\n            for (let x = 0; x < imgArr1.length; x++) {\n              imgArr1[x] = { ...imgArr1[x],\n                selected: imgArr1[x].id === img.id\n              };\n            }\n\n            this.setState({\n              images: [...imgArr1]\n            });\n            e.stopPropagation();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: img.selected ? \"block\" : \"none\",\n              position: \"absolute\",\n              right: \"0px\",\n              top: \"0px\",\n              padding: \"5px\",\n              color: \"rgb(180,180,180)\"\n            },\n            onClick: e => {\n              e.stopPropagation();\n              this.deletePage(img.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 84\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: { ...pageStyle,\n              backgroundImage: \"url('\" + img.imgDataUrl + \"')\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, img.id + \"\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }, this);\n\n    const pageMarginSection = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingBottom: \"10px\",\n          fontSize: \"16px\",\n          color: \"gray\",\n          paddingTop: \"20px\"\n        },\n        children: \"Page margin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: this.state.pageMargin == None ? \"purple\" : \"rgb(240,240,240)\",\n            color: this.state.pageMargin == None ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            pageMargin: None\n          }),\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: this.state.pageMargin == Small ? \"purple\" : \"rgb(240,240,240)\",\n            color: this.state.pageMargin == Small ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            pageMargin: Small\n          }),\n          children: \"Small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: this.state.pageMargin == Big ? \"purple\" : \"rgb(240,240,240)\",\n            color: this.state.pageMargin == Big ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            pageMargin: Big\n          }),\n          children: \"Big\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 32\n    }, this);\n\n    const imageQualitySelector = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\"\n        },\n        children: \"Image quality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"5px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (this.state.imageQuality < 10) {\n                this.setState({\n                  imageQuality: +this.state.imageQuality + 1\n                });\n              }\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"5px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.imageQuality / 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"5px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (this.state.imageQuality > 1) {\n                this.setState({\n                  imageQuality: +this.state.imageQuality - 1\n                });\n              }\n            },\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 35\n    }, this);\n\n    const optionStyle = {};\n\n    if (this.state.forceShowOption) {\n      optionStyle.display = \"block\";\n    }\n\n    const closeBtn = this.state.forceShowOption ? /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => {\n        this.setState({\n          forceShowOption: false\n        });\n      },\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 51\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 130\n    }, this);\n\n    const options = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      style: optionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingBottom: \"10px\",\n          fontSize: \"20px\",\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), closeBtn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingBottom: \"10px\",\n          fontSize: \"16px\",\n          color: \"gray\",\n          paddingTop: \"10px\"\n        },\n        children: \"Page orientation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: this.state.pageOrientation == Portrait ? \"purple\" : \"rgb(240,240,240)\",\n            color: this.state.pageOrientation == Portrait ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            pageOrientation: Portrait\n          }),\n          children: \"Portrait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: this.state.pageOrientation == Landscape ? \"purple\" : \"rgb(240,240,240)\",\n            color: this.state.pageOrientation == Landscape ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            pageOrientation: Landscape\n          }),\n          children: \"Landscape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingBottom: \"10px\",\n          fontSize: \"16px\",\n          color: \"gray\",\n          paddingTop: \"20px\"\n        },\n        children: \"Page size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: this.state.pageSize == A4 ? \"purple\" : \"rgb(240,240,240)\",\n            color: this.state.pageSize == A4 ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            pageSize: A4\n          }),\n          children: \"A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: this.state.pageSize == Letter ? \"purple\" : \"rgb(240,240,240)\",\n            color: this.state.pageSize == Letter ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            pageSize: Letter\n          }),\n          children: \"US Letter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: this.state.pageSize == Fit ? \"purple\" : \"rgb(240,240,240)\",\n            color: this.state.pageSize == Fit ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            pageSize: Fit\n          }),\n          children: \"Same as Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), this.state.pageSize !== Fit ? pageMarginSection : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingBottom: \"10px\",\n          fontSize: \"16px\",\n          color: \"gray\",\n          paddingTop: \"20px\"\n        },\n        children: \"Compression\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: this.state.compressImages ? \"purple\" : \"rgb(240,240,240)\",\n            color: this.state.compressImages ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            compressImages: true\n          }),\n          children: \"Compress Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1\",\n            height: \"50px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            background: !this.state.compressImages ? \"purple\" : \"rgb(240,240,240)\",\n            color: !this.state.compressImages ? \"white\" : \"black\",\n            padding: \"5px\"\n          },\n          onClick: () => this.setState({\n            compressImages: false\n          }),\n          children: \"Don't Compress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), this.state.compressImages ? imageQualitySelector : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n\n    const actions = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n        borderTop: \"1px solid rgb(200,200,200)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: \"5px\",\n            paddingRight: \"5px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.setState({\n                forceShowOption: true\n              });\n            },\n            className: \"option-btn button\",\n            children: \"PDF Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.fileInput.current.click(),\n          className: \"button\",\n          children: \"Add page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createPdf,\n        className: \"button\",\n        children: \"Generate PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 22\n    }, this);\n\n    const pageHeader = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Convert your\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"files easily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }, this);\n\n    if (this.state.images.length < 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [pageHeader, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: this.fileInput,\n          onChange: () => this.readfiles(this.fileInput.current.files),\n          multiple: true,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }, this), landing]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 14\n      }, this);\n    }\n\n    const busy = {};\n\n    if (this.state.busy) {\n      busy.display = \"flex\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"hidden\",\n        flex: \"1\"\n      },\n      children: [pageHeader, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          overflow: \"hidden\",\n          flex: \"1\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100%\",\n            flex: \"1\",\n            overflow: \"auto\",\n            background: \"rgb(240,240,240)\"\n          },\n          onClick: this.clearSelection,\n          children: [listView, /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: \"1\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), options]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), actions, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: this.fileInput,\n        onChange: () => this.readfiles(this.fileInput.current.files),\n        multiple: true,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"busy\",\n        style: busy,\n        children: \"Generating PDF, Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this); // return (\n    //   <div>\n    //     <div>This app is not styled yet</div>\n    //     <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n    //       {this.state.images.map((img, index) => (\n    //         <div style={{ display: 'flex', flexDirection: 'column' }}>\n    //           <img src={img.imgDataUrl} alt=\"\" style={{ width: \"96px\", height: \"128px\" }}></img>\n    //           <div>{\"Page \" + (index + 1)}</div>\n    //         </div>\n    //       ))}\n    //     </div>\n    //     <div>\n    //       <input type=\"file\" ref={this.fileInput} onChange={this.readfiles} multiple></input>\n    //       <button onClick={() => { this.setState({ images: [] }) }}>Clear</button>\n    //       <button onClick={this.createPdf}>Generate PDF</button>\n    //     </div>\n    //     {this.state.lastError ?\n    //       <div>\n    //         <div>{this.state.lastError}</div>\n    //         <div>{this.state.lastMime}</div>\n    //       </div> : <div>{this.state.lastMime}</div>}\n    //     <div>{this.state.lastMime}</div>\n    //   </div>);\n  } //https://labs.madisoft.it/javascript-image-compression-and-resizing/\n\n  /* resizeImage = async (file, width, height) => {\r\n    const blobURL = window.URL.createObjectURL(file);\r\n    const img = new Image();\r\n    img.src = blobURL;\r\n    img.onload = function (ev) {\r\n      window.URL.revokeObjectURL(blobURL); // release memory\r\n      // Use the img\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n    };\r\n    } */\n\n\n  readExif(blob) {\n    EXIF.readFromBinaryFile(blob);\n  }\n\n  canvasToBlob(canvas, quality) {\n    return new Promise((resolve, reject) => {\n      try {\n        canvas.toBlob(resolve, \"image/jpeg\", quality);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // scaleImage = async (pageWidth, pageHeight, pageMargin, dataURL) => {\n  //   let img = await this.loadImage(dataURL);\n  //   let scaleFactor = Math.min((pageWidth - pageMargin) / img.width, (pageHeight - pageMargin) / img.height);\n  //   let w = img.width * scaleFactor;\n  //   let h = img.height * scaleFactor;\n  //   let canvas = document.createElement('canvas');\n  //   let ctx = canvas.getContext('2d');\n  //   canvas.width = w;\n  //   canvas.height = h;\n  //   ctx.drawImage(img, 0, 0, w, h);\n  //   let blob = await this.canvasToBlob(canvas);\n  //   console.log(blob);\n  //   return await blob.arrayBuffer();\n  // }\n\n\n  // getPreviewImageSize = (pageWidth, pageHeight, imageWidth, imageHeight) => {\n  //   let pageSize = this.getPageSize();\n  //   let margin = this.state.pageMargin * pageHeight / pageSize[1];\n  //   let scaleFactor = Math.min((pageWidth - margin) / img.width, (pageHeight - margin) / img.height);\n  //   let w = imageWidth * scaleFactor;\n  //   let h = imageHeight * scaleFactor;\n  //   return [w, h];\n  // }\n  // getPreviewPageSize = () => {\n  //   return {\n  //     height: 192,\n  //     width: 192 * this.getAspectRatio()\n  //   };\n  // }\n  // getMaxImageSize=()=>{\n  //   let maxWidth = -1;\n  //   let maxHeight = -1;\n  //   this.state.images.forEach(image => {\n  //     if (image.width > maxWidth) maxWidth = image.width;\n  //     if (image.height > maxWidth) maxHeight = image.height;\n  //   });\n  //   return {\n  //     width: maxWidth,\n  //     height: maxHeight\n  //   };\n  // }\n\n  /* createPdf = async () => {\r\n    const pdfDoc = await PDFDocument.create();\r\n    this.createPage(pdfDoc, 1);\r\n  }\r\n    createPage = (pdfDoc, index) => {\r\n    this.embedImage(pdfDoc, index).then(() => {\r\n      if (index > this.state.images.length) {\r\n        pdfDoc.save().then((blob) => {\r\n          var link = document.createElement('a');\r\n          link.href = window.URL.createObjectURL(blob);\r\n          var fileName = \"file.pdf\";\r\n          link.download = fileName;\r\n          link.click();\r\n        });\r\n      }\r\n      this.createPage(pdfDoc, index + 1);\r\n    });\r\n  }\r\n    embedImage = async (pdfDoc, index) => {\r\n    if (index > this.state.images.length) return;\r\n    let raw = await (await fetch(this.state.images[index - 1])).blob();\r\n    const img = await pdfDoc.embedJpg(raw);\r\n    const page = pdfDoc.addPage();\r\n    page.drawImage(img, {\r\n      x: 0,\r\n      y: 0,\r\n      width: page.getWidth(),\r\n      height: page.getHeight(),\r\n    });\r\n  } */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      let r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Deepanganth/Desktop/img2pdf/pdf-app/src/App.js"],"names":["React","PageSizes","PDFDocument","degrees","EXIF","polyfill","scrollBehaviourDragImageTranslateOverride","dragImageTranslateOverride","window","addEventListener","A4","Letter","Fit","Portrait","Landscape","None","Small","Big","App","Component","constructor","props","clearSelection","imgArr","state","images","forEach","img","selected","setState","readfiles","fileList","console","log","length","i","type","imgDataUrl","URL","createObjectURL","uuid","uuidv4","push","id","file","loadImage","objUrl","Promise","resolve","reject","Image","onload","onerror","e","src","fetchImage","dataURL","quality","res","fetch","raw","arrayBuffer","mime","headers","get","canvas","document","createElement","ctx","getContext","width","height","drawImage","blob","canvasToBlob","createPdf","busy","pdfDoc","create","pageSize","getPageSize","compressImages","imageQuality","undefined","jpegOrientation","jpegExif","readFromBinaryFile","ex","error","embedJpg","embedPng","page","addPage","x","y","scaleFactor","Math","min","getWidth","pageMargin","getHeight","w","h","dim","scale","setRotation","pdfBytes","save","Blob","link","href","fileName","download","click","err","lastError","lastMime","deletePage","arr","indexPosition","index","splice","handleDrop","droppedId","currentId","droppedIndex","droppedImage","currentIndex","pageOrientation","reverse","getAspectRatio","forceShowOption","fileInput","createRef","render","pageWrapper","border","display","background","position","pageStyle","margin","flex","backgroundSize","backgroundRepeat","backgroundPosition","ceil","boxShadow","landing","padding","current","stopPropagation","preventDefault","files","dataTransfer","listView","flexWrap","justifyContent","map","effectAllowed","setData","getData","imgArr1","right","top","color","backgroundImage","pageMarginSection","paddingBottom","fontSize","paddingTop","flexDirection","textAlign","imageQualitySelector","optionStyle","closeBtn","options","actions","borderTop","paddingLeft","paddingRight","pageHeader","overflow","readExif","toBlob","replace","c","r","random","v","toString"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\nimport { PageSizes, PDFDocument, degrees } from 'pdf-lib'\r\nimport EXIF from 'exif-js';\r\nimport { polyfill } from \"mobile-drag-drop\";\r\n\r\n// optional import of scroll behaviour\r\nimport { scrollBehaviourDragImageTranslateOverride } from \"mobile-drag-drop/scroll-behaviour\";\r\n\r\n// options are optional ;)\r\npolyfill({\r\n  // use this to make use of the scroll behaviour\r\n  dragImageTranslateOverride: scrollBehaviourDragImageTranslateOverride\r\n});\r\n\r\nwindow.addEventListener('touchmove', function () { });\r\n\r\nconst A4 = \"A4\", Letter = \"US Letter\", Fit = \"Same as Image\", Portrait = \"Portrait\", Landscape = \"Landscape\", None = \"0\", Small = \"20\", Big = \"50\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      images: [],\r\n      pageOrientation: Portrait,\r\n      pageSize: A4,\r\n      pageMargin: None,\r\n      lastError: undefined,\r\n      lastMime: undefined,\r\n      forceShowOption: false,\r\n      compressImages: false,\r\n      imageQuality: 8,\r\n      busy: false\r\n    };\r\n    this.fileInput = React.createRef();\r\n  }\r\n  render() {\r\n    let pageWrapper = {\r\n      height: \"192px\",\r\n      width: \"192px\",\r\n      border: \"none\",\r\n      display: \"flex\",\r\n      background: \"white\",\r\n      position: \"relative\"\r\n    };\r\n\r\n    let pageStyle = {\r\n      margin: '0px',\r\n      flex: \"1\",\r\n      backgroundSize: \"contain\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundPosition: \"center\"\r\n    };\r\n\r\n    if (this.state.pageMargin === Small) {\r\n      pageStyle.margin = \"5px\";\r\n    } else if (this.state.pageMargin === Big) {\r\n      pageStyle.margin = \"10px\";\r\n    }\r\n\r\n    if (this.state.pageSize !== Fit) {\r\n      pageWrapper.width = Math.ceil(192 * this.getAspectRatio()) + 'px';\r\n      pageWrapper.boxShadow = \"5px 5px 5px rgb(200,200,200)\";\r\n    }\r\n\r\n    const landing = (<div className=\"landing-page\">\r\n      <div style={{ padding: \"40px\" }}>\r\n        Convert JPEG or PNG images to PDF without uploading your sensitve data anywhere.\r\n      <br />\r\n      Files are processed entirely on your device and does not get uploaded to any server.\r\n      </div>\r\n      <div class=\"drop-box\">\r\n        <div>\r\n          <button onClick={() => this.fileInput.current.click()} className=\"big-btn\">Select Images</button>\r\n        </div>\r\n      <div className=\"dropzone\"\r\n        onDragStart={(e) => {\r\n        }}\r\n        onDrop={(e) => {\r\n          if (e.stopPropagation) {\r\n            e.stopPropagation(); // stops the browser from redirecting.\r\n          }\r\n          if (e.preventDefault) {\r\n            e.preventDefault(); // stops the browser from redirecting.\r\n          }\r\n          let files = e.dataTransfer.files;\r\n          this.readfiles(files);\r\n        }}\r\n        onDragOver={(e) => {\r\n          if (e.preventDefault) {\r\n            e.preventDefault(); // stops the browser from redirecting.\r\n          }\r\n        }}\r\n        onDragEnter={(e) => { e.preventDefault(); }}>or drop images here</div>        \r\n      </div>\r\n    </div>);\r\n\r\n    const listView = (<div class=\"after\" style={{ display: 'flex', flexWrap: 'wrap', flex: \"1\", justifyContent: \"center\" }} >\r\n      {this.state.images.map((img, index) => (\r\n        <div\r\n          class=\"shadow\"\r\n          style={{ padding: \"5px\" }}\r\n          key={img.id + \"\"}\r\n          draggable={true}\r\n          onDragStart={(e) => {\r\n            e.dataTransfer.effectAllowed = 'move';\r\n            e.dataTransfer.setData('text/plain', img.id);\r\n            console.log(\"Drag start \" + index);\r\n          }}\r\n          onDrop={(e) => {\r\n            if (e.stopPropagation) {\r\n              e.stopPropagation(); // stops the browser from redirecting.\r\n            }\r\n            let droppedId = e.dataTransfer.getData(\"text/plain\");\r\n            console.log(\"droppedId: \" + droppedId);\r\n            this.handleDrop(droppedId, img.id);\r\n          }}\r\n          onDragOver={(e) => {\r\n            if (e.preventDefault) {\r\n              e.preventDefault(); // stops the browser from redirecting.\r\n            }\r\n          }}\r\n          onDragEnter={(e) => { e.preventDefault(); }}\r\n        >\r\n          <div style={{ ...pageWrapper }}\r\n            onClick={\r\n              (e) => {\r\n                let imgArr1 = [...this.state.images];\r\n                for (let x = 0; x < imgArr1.length; x++) {\r\n                  imgArr1[x] = { ...imgArr1[x], selected: imgArr1[x].id === img.id };\r\n                }\r\n                this.setState({ images: [...imgArr1] });\r\n                e.stopPropagation();\r\n              }\r\n            }\r\n          >\r\n            <div style={{\r\n              display: img.selected ? \"block\" : \"none\", position: \"absolute\",\r\n              right: \"0px\", top: \"0px\", padding: \"5px\", color: \"rgb(180,180,180)\"\r\n            }} onClick={(e) => { e.stopPropagation(); this.deletePage(img.id); }} ><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></div>\r\n            <div style={{ ...pageStyle, backgroundImage: \"url('\" + img.imgDataUrl + \"')\" }}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>);\r\n\r\n    const pageMarginSection = (<div>\r\n      <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Page margin</div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{\r\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n          justifyContent: \"center\", textAlign: \"center\",\r\n          background: (this.state.pageMargin == None ? \"purple\" : \"rgb(240,240,240)\"),\r\n          color: (this.state.pageMargin == None ? \"white\" : \"black\"), padding: \"5px\"\r\n        }} onClick={() => this.setState({ pageMargin: None })}>None</div>\r\n        <div style={{\r\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n          justifyContent: \"center\", textAlign: \"center\",\r\n          background: (this.state.pageMargin == Small ? \"purple\" : \"rgb(240,240,240)\"),\r\n          color: (this.state.pageMargin == Small ? \"white\" : \"black\"), padding: \"5px\"\r\n        }} onClick={() => this.setState({ pageMargin: Small })}>Small</div>\r\n        <div style={{\r\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n          justifyContent: \"center\", textAlign: \"center\",\r\n          background: (this.state.pageMargin == Big ? \"purple\" : \"rgb(240,240,240)\"),\r\n          color: (this.state.pageMargin == Big ? \"white\" : \"black\"), padding: \"5px\"\r\n        }} onClick={() => this.setState({ pageMargin: Big })}>Big</div>\r\n      </div>\r\n    </div>);\r\n\r\n    const imageQualitySelector = (<div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>Image quality</div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ padding: \"5px\" }}>\r\n          <button onClick={() => {\r\n            if (this.state.imageQuality < 10) {\r\n              this.setState({\r\n                imageQuality: +this.state.imageQuality + 1\r\n              });\r\n            }\r\n          }}>+</button>\r\n        </div>\r\n        <div style={{ padding: \"5px\" }}>\r\n          <div>{this.state.imageQuality / 10}</div>\r\n        </div>\r\n        <div style={{ padding: \"5px\" }} >\r\n          <button onClick={() => {\r\n            if (this.state.imageQuality > 1) {\r\n              this.setState({\r\n                imageQuality: +this.state.imageQuality - 1\r\n              });\r\n            }\r\n          }}>-</button>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n\r\n    const optionStyle = {}\r\n    if (this.state.forceShowOption) {\r\n      optionStyle.display = \"block\"\r\n    }\r\n\r\n    const closeBtn = this.state.forceShowOption ? <span onClick={() => { this.setState({ forceShowOption: false }) }}>X</span> : <span></span>;\r\n\r\n    const options = (\r\n      <div className=\"options\" style={optionStyle}>\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"20px\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <span>Options</span>\r\n          {closeBtn}\r\n        </div>\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"10px\" }}>Page orientation</div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageOrientation == Portrait ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageOrientation == Portrait ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ pageOrientation: Portrait })}>Portrait</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageOrientation == Landscape ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageOrientation == Landscape ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ pageOrientation: Landscape })}>Landscape</div>\r\n        </div>\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Page size</div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageSize == A4 ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageSize == A4 ? \"white\" : \"black\"), padding: \"5px\"\r\n          }} onClick={() => this.setState({ pageSize: A4 })}>A4</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageSize == Letter ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageSize == Letter ? \"white\" : \"black\"), padding: \"5px\"\r\n          }} onClick={() => this.setState({ pageSize: Letter })}>US Letter</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageSize == Fit ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageSize == Fit ? \"white\" : \"black\"), padding: \"5px\"\r\n          }} onClick={() => this.setState({ pageSize: Fit })}>Same as Image</div>\r\n        </div>\r\n        {this.state.pageSize !== Fit ? pageMarginSection : (<div></div>)}\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Compression</div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.compressImages ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.compressImages ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ compressImages: true })}>Compress Images</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (!this.state.compressImages ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (!this.state.compressImages ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ compressImages: false })}>Don't Compress</div>\r\n        </div>\r\n        {this.state.compressImages ? imageQualitySelector : (<div></div>)}\r\n      </div>\r\n    );\r\n    const actions = (<div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"10px\", borderTop: \"1px solid rgb(200,200,200)\" }}>\r\n      <div style={{ display: \"flex\" }} >\r\n        <div style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\r\n          <button onClick={() => {\r\n            this.setState({\r\n              forceShowOption: true\r\n            });\r\n          }} className=\"option-btn button\">PDF Options</button>\r\n        </div>\r\n        <button onClick={() => this.fileInput.current.click()} className=\"button\">Add page</button>\r\n      </div>\r\n      <button onClick={this.createPdf} className=\"button\">Generate PDF</button>\r\n    </div>);\r\n\r\n    const pageHeader = (<div className=\"page-header\">\r\n      <span>Convert your</span>\r\n      <h1>files easily</h1>\r\n    </div>);\r\n\r\n    if (this.state.images.length < 1) {\r\n      return <div>\r\n        {pageHeader}\r\n        <input type=\"file\" ref={this.fileInput} onChange={() => this.readfiles(this.fileInput.current.files)} multiple style={{ display: \"none\" }}></input>\r\n        {landing}\r\n      </div>\r\n    }\r\n\r\n    const busy = {};\r\n    if (this.state.busy) {\r\n      busy.display = \"flex\";\r\n    }\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", height: \"100%\", overflow: \"hidden\", flex: \"1\" }}>\r\n        {pageHeader}\r\n        <div style={{ display: \"flex\", overflow: \"hidden\", flex: \"1\" }}>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", flex: \"1\", overflow: \"auto\", background: \"rgb(240,240,240)\" }} onClick={this.clearSelection}>\r\n            {listView}\r\n            <div style={{ flex: \"1\" }}></div>\r\n          </div>\r\n          {options}\r\n        </div>\r\n        {actions}\r\n        <input type=\"file\" accept={\"image/*\"} ref={this.fileInput} onChange={() => this.readfiles(this.fileInput.current.files)} multiple style={{ display: \"none\" }} />\r\n        <div className=\"busy\" style={busy}>Generating PDF, Please wait...</div>\r\n      </div>\r\n\r\n    );\r\n\r\n    // return (\r\n    //   <div>\r\n    //     <div>This app is not styled yet</div>\r\n    //     <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n    //       {this.state.images.map((img, index) => (\r\n    //         <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n    //           <img src={img.imgDataUrl} alt=\"\" style={{ width: \"96px\", height: \"128px\" }}></img>\r\n    //           <div>{\"Page \" + (index + 1)}</div>\r\n    //         </div>\r\n    //       ))}\r\n    //     </div>\r\n    //     <div>\r\n    //       <input type=\"file\" ref={this.fileInput} onChange={this.readfiles} multiple></input>\r\n    //       <button onClick={() => { this.setState({ images: [] }) }}>Clear</button>\r\n    //       <button onClick={this.createPdf}>Generate PDF</button>\r\n    //     </div>\r\n    //     {this.state.lastError ?\r\n    //       <div>\r\n    //         <div>{this.state.lastError}</div>\r\n    //         <div>{this.state.lastMime}</div>\r\n    //       </div> : <div>{this.state.lastMime}</div>}\r\n    //     <div>{this.state.lastMime}</div>\r\n    //   </div>);\r\n  }\r\n\r\n  //https://labs.madisoft.it/javascript-image-compression-and-resizing/\r\n  /* resizeImage = async (file, width, height) => {\r\n    const blobURL = window.URL.createObjectURL(file);\r\n    const img = new Image();\r\n    img.src = blobURL;\r\n    img.onload = function (ev) {\r\n      window.URL.revokeObjectURL(blobURL); // release memory\r\n      // Use the img\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n    };\r\n\r\n  } */\r\n\r\n  clearSelection = () => {\r\n    let imgArr = [...this.state.images];\r\n    imgArr.forEach(img => {\r\n      img.selected = false;\r\n    });\r\n    this.setState({\r\n      images: imgArr\r\n    });\r\n  }\r\n\r\n  readfiles = async (fileList) => {\r\n    console.log(fileList.length);\r\n    let imgArr = [];\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      console.log(\"Type: \" + fileList[i].type);\r\n      if (!(fileList[i].type === \"image/png\" || fileList[i].type === \"image/x-png\" || fileList[i].type === \"image/jpeg\")) {\r\n        continue;\r\n      }\r\n      const imgDataUrl = window.URL.createObjectURL(fileList[i]);\r\n      //let img = await this.loadImage(imgDataUrl);\r\n      let uuid = this.uuidv4();\r\n      console.log(\"uuid: \" + uuid);\r\n      imgArr.push({ id: uuid, imgDataUrl, file: fileList[i], /* width: img.width, height: img.height */selected: false });\r\n    }\r\n    this.setState((state) => ({\r\n      images: [...state.images, ...imgArr]\r\n    }));\r\n  }\r\n\r\n  loadImage = (objUrl) => {\r\n    return new Promise((resolve, reject) => {\r\n      let img = new Image();\r\n      img.onload = () => {\r\n        resolve(img);\r\n      };\r\n      img.onerror = (e) => {\r\n        reject(e);\r\n      };\r\n      img.src = objUrl;\r\n    });\r\n  }\r\n\r\n  readExif(blob) {\r\n    EXIF.readFromBinaryFile(blob)\r\n  }\r\n\r\n  canvasToBlob(canvas, quality) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        canvas.toBlob(resolve, \"image/jpeg\", quality);\r\n      }\r\n      catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  // scaleImage = async (pageWidth, pageHeight, pageMargin, dataURL) => {\r\n  //   let img = await this.loadImage(dataURL);\r\n\r\n  //   let scaleFactor = Math.min((pageWidth - pageMargin) / img.width, (pageHeight - pageMargin) / img.height);\r\n  //   let w = img.width * scaleFactor;\r\n  //   let h = img.height * scaleFactor;\r\n\r\n  //   let canvas = document.createElement('canvas');\r\n  //   let ctx = canvas.getContext('2d');\r\n  //   canvas.width = w;\r\n  //   canvas.height = h;\r\n  //   ctx.drawImage(img, 0, 0, w, h);\r\n  //   let blob = await this.canvasToBlob(canvas);\r\n  //   console.log(blob);\r\n  //   return await blob.arrayBuffer();\r\n  // }\r\n\r\n  fetchImage = async (dataURL, quality) => {\r\n    if (!quality) {\r\n      let res = await fetch(dataURL);\r\n      let raw = await res.arrayBuffer();\r\n      return {\r\n        arrayBuffer: raw,\r\n        mime: res.headers.get('content-type')\r\n      }\r\n    }\r\n    else {\r\n      let img = await this.loadImage(dataURL);\r\n      let canvas = document.createElement('canvas');\r\n      let ctx = canvas.getContext('2d');\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.drawImage(img, 0, 0, img.width, img.height);\r\n      let blob = await this.canvasToBlob(canvas, quality);\r\n      let raw = await blob.arrayBuffer();\r\n      return {\r\n        arrayBuffer: raw,\r\n        mime: \"image/jpeg\"\r\n      };\r\n    }\r\n  }\r\n\r\n  createPdf = async () => {\r\n    let mime = \"\";\r\n    try {\r\n      this.setState({ busy: true });\r\n      const pdfDoc = await PDFDocument.create();\r\n      for (let i = 0; i < this.state.images.length; i++) {\r\n\r\n        let pageSize = this.getPageSize();\r\n\r\n        // if (this.state.pageSize !== Fit) {\r\n        //   const page = pdfDoc.addPage(pageSize);\r\n        //   const dim = await pdfDoc.embedPng(await this.scaleImage(page.getWidth(), page.getHeight(), this.state.pageMargin, this.state.images[i].imgDataUrl));\r\n        //   page.drawImage(dim, {\r\n        //     x: page.getWidth() / 2 - dim.width / 2,\r\n        //     y: page.getHeight() / 2 - dim.height / 2,\r\n        //     width: dim.width,\r\n        //     height: dim.height,\r\n        //   });\r\n\r\n        //   continue;\r\n        // }\r\n\r\n        // let loadedImage=await loadImage(this.state.images[i].imgDataUrl,{meta:true});\r\n        // console.log(\"loaded image \"+loadedImage);\r\n        // console.log(loadedImage);\r\n\r\n        let res = await this.fetchImage(this.state.images[i].imgDataUrl, this.state.compressImages ? this.state.imageQuality / 10 : undefined);\r\n        let raw = await res.arrayBuffer;\r\n\r\n        mime = res.mime;\r\n        console.log(mime);\r\n\r\n        let jpegOrientation = 1;\r\n\r\n        if (mime === 'image/jpeg') {\r\n          try {\r\n            let jpegExif = EXIF.readFromBinaryFile(raw);\r\n            if (jpegExif[\"Orientation\"]) {\r\n              jpegOrientation = jpegExif[\"Orientation\"];\r\n              console.log(\"jpegOrientation: \" + jpegOrientation);\r\n            }\r\n          }\r\n          catch (ex) { console.error(ex); }\r\n        }\r\n        //console.log(raw);\r\n        const img = await (mime === 'image/jpeg' ? pdfDoc.embedJpg(raw) : pdfDoc.embedPng(raw));\r\n\r\n        console.log(\"width: \" + img.width + \" height: \" + img.height);\r\n\r\n        if (this.state.pageSize === Fit) {\r\n          pageSize = [img.width, img.height];\r\n        } else {\r\n          switch (jpegOrientation) {\r\n            case 6:\r\n            case 8:\r\n              pageSize = [pageSize[1], pageSize[0]];\r\n              break;\r\n          }\r\n        }\r\n        const page = pdfDoc.addPage(pageSize);\r\n        if (this.state.pageSize === Fit) {\r\n          page.drawImage(img, {\r\n            x: 0,\r\n            y: 0,\r\n            width: img.width,\r\n            height: img.height,\r\n          });\r\n        } else {\r\n          //page.setSize(pageSize[0], pageSize[1]);\r\n          let scaleFactor = Math.min((page.getWidth() - this.state.pageMargin) / img.width, (page.getHeight() - this.state.pageMargin) / img.height);\r\n          let w = img.width * scaleFactor;\r\n          let h = img.height * scaleFactor;\r\n\r\n          //page.setSize(img.width,img.height);\r\n          console.log(img.width + \" \" + img.height);\r\n          console.log(page.getWidth() + \" \" + page.getHeight());\r\n\r\n          let dim = img.scale(scaleFactor);\r\n\r\n          page.drawImage(img, {\r\n            x: page.getWidth() / 2 - dim.width / 2,\r\n            y: page.getHeight() / 2 - dim.height / 2,\r\n            width: dim.width,\r\n            height: dim.height,\r\n          });\r\n        }\r\n\r\n        switch (jpegOrientation) {\r\n          case 6:\r\n            page.setRotation(degrees(90));\r\n            break;\r\n          case 3:\r\n            page.setRotation(degrees(180));\r\n            break;\r\n          case 8:\r\n            page.setRotation(degrees(270));\r\n            break;\r\n        }\r\n      }\r\n      const pdfBytes = await pdfDoc.save();\r\n      let blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n      // let url = window.URL.createObjectURL(blob);\r\n      // window.open(url);\r\n      var link = document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob);\r\n      var fileName = \"file.pdf\";\r\n      link.download = fileName;\r\n      link.click();\r\n      this.setState({ busy: false });\r\n    }\r\n    catch (err) {\r\n      console.error(err);\r\n      this.setState({ lastError: err, lastMime: mime, busy: false });\r\n    }\r\n  }\r\n\r\n  deletePage = id => {\r\n    console.log(\"To delete: \" + id);\r\n    let arr = [...this.state.images];\r\n    let indexPosition = -1;\r\n    arr.forEach((img, index) => {\r\n      if (img.id === id) {\r\n        indexPosition = index;\r\n      }\r\n    });\r\n    arr.splice(indexPosition, 1);\r\n    this.setState({\r\n      images: arr\r\n    });\r\n  }\r\n\r\n  handleDrop = (droppedId, currentId) => {\r\n    console.log(\"droppedId: \" + droppedId + \" currentId: \" + currentId);\r\n    let droppedIndex = -1;\r\n    let arr = [...this.state.images];\r\n    arr.forEach((img, index) => {\r\n      if (img.id === droppedId) {\r\n        droppedIndex = index;\r\n      }\r\n    });\r\n    let droppedImage = arr.splice(droppedIndex, 1)[0];\r\n    let currentIndex = -1;\r\n    arr.forEach((img, index) => {\r\n      if (img.id === currentId) {\r\n        currentIndex = index;\r\n      }\r\n    });\r\n    arr.splice(currentIndex, 0, droppedImage);\r\n    console.log(arr);\r\n\r\n    this.setState({\r\n      images: arr\r\n    });\r\n  }\r\n\r\n  getPageSize = () => {\r\n    switch (this.state.pageSize) {\r\n      case A4:\r\n        if (this.state.pageOrientation === Portrait) {\r\n          return PageSizes.A4;\r\n        }\r\n        else {\r\n          let pageSize = [...PageSizes.A4];\r\n          pageSize.reverse();\r\n          return pageSize;\r\n        }\r\n      case Letter:\r\n        if (this.state.pageOrientation === Portrait) {\r\n          return PageSizes.Letter;\r\n        }\r\n        else {\r\n          let pageSize = [...PageSizes.Letter];\r\n          pageSize.reverse();\r\n          return pageSize;\r\n        }\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  getAspectRatio = () => {\r\n    let pageSize = this.getPageSize();\r\n    return pageSize[0] / pageSize[1];\r\n  }\r\n\r\n  // getPreviewImageSize = (pageWidth, pageHeight, imageWidth, imageHeight) => {\r\n  //   let pageSize = this.getPageSize();\r\n  //   let margin = this.state.pageMargin * pageHeight / pageSize[1];\r\n  //   let scaleFactor = Math.min((pageWidth - margin) / img.width, (pageHeight - margin) / img.height);\r\n  //   let w = imageWidth * scaleFactor;\r\n  //   let h = imageHeight * scaleFactor;\r\n  //   return [w, h];\r\n  // }\r\n\r\n  // getPreviewPageSize = () => {\r\n  //   return {\r\n  //     height: 192,\r\n  //     width: 192 * this.getAspectRatio()\r\n  //   };\r\n  // }\r\n\r\n  // getMaxImageSize=()=>{\r\n  //   let maxWidth = -1;\r\n  //   let maxHeight = -1;\r\n  //   this.state.images.forEach(image => {\r\n  //     if (image.width > maxWidth) maxWidth = image.width;\r\n  //     if (image.height > maxWidth) maxHeight = image.height;\r\n  //   });\r\n  //   return {\r\n  //     width: maxWidth,\r\n  //     height: maxHeight\r\n  //   };\r\n  // }\r\n\r\n  /* createPdf = async () => {\r\n    const pdfDoc = await PDFDocument.create();\r\n    this.createPage(pdfDoc, 1);\r\n  }\r\n\r\n  createPage = (pdfDoc, index) => {\r\n    this.embedImage(pdfDoc, index).then(() => {\r\n      if (index > this.state.images.length) {\r\n        pdfDoc.save().then((blob) => {\r\n          var link = document.createElement('a');\r\n          link.href = window.URL.createObjectURL(blob);\r\n          var fileName = \"file.pdf\";\r\n          link.download = fileName;\r\n          link.click();\r\n        });\r\n      }\r\n      this.createPage(pdfDoc, index + 1);\r\n    });\r\n  }\r\n\r\n  embedImage = async (pdfDoc, index) => {\r\n    if (index > this.state.images.length) return;\r\n    let raw = await (await fetch(this.state.images[index - 1])).blob();\r\n    const img = await pdfDoc.embedJpg(raw);\r\n    const page = pdfDoc.addPage();\r\n    page.drawImage(img, {\r\n      x: 0,\r\n      y: 0,\r\n      width: page.getWidth(),\r\n      height: page.getHeight(),\r\n    });\r\n  } */\r\n\r\n  uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}